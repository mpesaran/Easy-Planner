{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Task from \"./components/Task\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    taskItems = _useState4[0],\n    setTaskItems = _useState4[1];\n  useEffect(function () {\n    function loadTasks() {\n      return _loadTasks.apply(this, arguments);\n    }\n    function _loadTasks() {\n      _loadTasks = _asyncToGenerator(function* () {\n        try {\n          var savedTasks = yield AsyncStorage.getItem('tasks');\n          if (savedTasks) {\n            setTaskItems(JSON.parse(savedTasks));\n          }\n        } catch (error) {\n          console.error('Error loading tasks:', error);\n        }\n      });\n      return _loadTasks.apply(this, arguments);\n    }\n    loadTasks();\n  }, []);\n  useEffect(function () {\n    function saveTasks() {\n      return _saveTasks.apply(this, arguments);\n    }\n    function _saveTasks() {\n      _saveTasks = _asyncToGenerator(function* () {\n        try {\n          yield AsyncStorage.setItem('tasks', JSON.stringify(taskItems));\n        } catch (error) {\n          console.error('Error saving tasks:', error);\n        }\n      });\n      return _saveTasks.apply(this, arguments);\n    }\n    saveTasks();\n  }, [taskItems]);\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    if (task) {\n      setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n      setTask('');\n    }\n  };\n  var handleDeleteTask = function handleDeleteTask(index) {\n    var newTaskItems = _toConsumableArray(taskItems);\n    newTaskItems.splice(index, 1);\n    setTaskItems(newTaskItems);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.taskWrapper,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Today's tasks\"\n      }), _jsx(FlatList, {\n        data: taskItems,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n            index = _ref.index;\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleDeleteTask(index);\n            },\n            children: _jsx(Task, {\n              text: item\n            })\n          });\n        }\n      })]\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: 'Write a task',\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  taskWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  items: {\n    marginTop: 30\n  },\n  addText: {},\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    borderRadius: 60,\n    backgroundColor: '#fff',\n    borderColor: '#c0c0c0',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    width: 300,\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: '#c0c0c0',\n    borderWidth: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","KeyboardAvoidingView","StyleSheet","Text","View","TextInput","TouchableOpacity","Keyboard","FlatList","AsyncStorage","Task","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","task","setTask","_useState3","_useState4","taskItems","setTaskItems","loadTasks","_loadTasks","apply","arguments","_asyncToGenerator","savedTasks","getItem","JSON","parse","error","console","saveTasks","_saveTasks","setItem","stringify","handleAddTask","dismiss","concat","_toConsumableArray","handleDeleteTask","index","newTaskItems","splice","style","styles","container","children","taskWrapper","sectionTitle","data","keyExtractor","item","toString","renderItem","_ref","onPress","text","behavior","Platform","OS","writeTaskWrapper","input","placeholder","value","onChangeText","addWrapper","addText","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginBottom","items","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","height","borderRadius","borderColor","borderWidth","paddingVertical"],"sources":["C:/Users/mahsa/dayPlan/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Keyboard,\n  FlatList, // Use FlatList instead of mapping task items\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage'; // Import AsyncStorage\nimport Task from './components/Task';\n\nexport default function App() {\n  const [task, setTask] = useState('');\n  const [taskItems, setTaskItems] = useState([]);\n\n  // Load tasks from AsyncStorage when the component mounts\n  useEffect(() => {\n    async function loadTasks() {\n      try {\n        const savedTasks = await AsyncStorage.getItem('tasks');\n        if (savedTasks) {\n          setTaskItems(JSON.parse(savedTasks));\n        }\n      } catch (error) {\n        console.error('Error loading tasks:', error);\n      }\n    }\n\n    loadTasks();\n  }, []);\n\n  // Save tasks to AsyncStorage whenever taskItems change\n  useEffect(() => {\n    async function saveTasks() {\n      try {\n        await AsyncStorage.setItem('tasks', JSON.stringify(taskItems));\n      } catch (error) {\n        console.error('Error saving tasks:', error);\n      }\n    }\n\n    saveTasks();\n  }, [taskItems]);\n\n  const handleAddTask = () => {\n    Keyboard.dismiss();\n    if (task) {\n      setTaskItems([...taskItems, task]);\n      setTask('');\n    }\n  };\n\n  const handleDeleteTask = (index) => {\n    const newTaskItems = [...taskItems];\n    newTaskItems.splice(index, 1);\n    setTaskItems(newTaskItems);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskWrapper}>\n        <Text style={styles.sectionTitle}>Today's tasks</Text>\n        <FlatList\n          data={taskItems}\n          keyExtractor={(item, index) => index.toString()}\n          renderItem={({ item, index }) => (\n            <TouchableOpacity\n              onPress={() => handleDeleteTask(index)}\n            >\n              <Task text={item} />\n            </TouchableOpacity>\n          )}\n        />\n      </View>\n\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.writeTaskWrapper}\n      >\n        <TextInput\n          style={styles.input}\n          placeholder={'Write a task'}\n          value={task}\n          onChangeText={(text) => setTask(text)}\n        />\n        <TouchableOpacity onPress={() => handleAddTask()}>\n          <View style={styles.addWrapper}>\n            <Text style={styles.addText}>+</Text>\n          </View>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED',\n  },\n  taskWrapper: {\n    paddingTop: 80,\n    paddingHorizontal : 20,\n  },\n  sectionTitle : {\n    fontSize : 24,\n    fontWeight : 'bold',\n    marginBottom:10,\n  },\n  items : {\n      marginTop:30,\n  }, \n  addText :{\n    \n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n\n  }, addWrapper: {\n    width : 60,\n    height: 60,\n    borderRadius: 60,\n    backgroundColor: '#fff',\n    borderColor: '#c0c0c0',\n    borderWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    width: 300,\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: '#c0c0c0',\n    borderWidth: 1,\n    \n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}